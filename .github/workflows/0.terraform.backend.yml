name: 0. Terraform Backend Provisioning

on:
  workflow_dispatch:

jobs:
  deploy:
    name: 'Deploy Terraform state bucket'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN }}
      
    defaults:
      run:
        shell: bash
    steps:

      - name: Create a project Suffix
        id: project-suffix
        run: |
          if [ -z "${{ vars.PROJECT_SUFFIX }}" ]; then
            echo "PROJECT_SUFFIX is not defined, generating a random suffix."
            project_suffix=${RANDOM}${RANDOM}
            echo "Generated Project Suffix: $project_suffix"
            echo "PROJECT_SUFFIX=$project_suffix" >> $GITHUB_ENV
            gh variable set PROJECT_SUFFIX -b ${{env.PROJECT_SUFFIX}}
          else
            echo "Using existing variable for PROJECT_SUFFIX."
            echo "PROJECT_SUFFIX=${{ vars.PROJECT_SUFFIX }}" >> $GITHUB_ENV
          fi
    
      - name: Check if TERRAFORM_STORAGE_ACCOUNT_NAME is defined
        id: check-secret
        run: |
          if [ -z "${{ vars.TERRAFORM_STORAGE_ACCOUNT_NAME }}" ]; then
            echo "Variable TERRAFORM_STORAGE_ACCOUNT_NAME is not defined. Define it using the suffix. ${{ env.PROJECT_SUFFIX }}"
            storage_account_name="terraform${{ env.PROJECT_SUFFIX }}"
            echo "Generated Storage Account Name: $storage_account_name"
            echo "TERRAFORM_STORAGE_ACCOUNT_NAME=$storage_account_name" >> $GITHUB_ENV
            gh variable set TERRAFORM_STORAGE_ACCOUNT_NAME -b ${{ env.TERRAFORM_STORAGE_ACCOUNT_NAME }}

          else
            echo "Using existing variable for TERRAFORM_STORAGE_ACCOUNT_NAME."
            echo "TERRAFORM_STORAGE_ACCOUNT_NAME=${{ vars.TERRAFORM_STORAGE_ACCOUNT_NAME }}" >> $GITHUB_ENV
          fi

      - name: Set Container Name
        run: echo "TERRAFORM_STORAGE_CONTAINER_NAME=tfstate" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create the Storage Account
        run: |
          az storage account create \
              --name  ${{ env.TERRAFORM_STORAGE_ACCOUNT_NAME }} \
              --resource-group ${{ vars.AZURE_GROUP_NAME }} \
              --location ${{ vars.AZURE_LOCATION }} \
              --sku Standard_LRS \
              --allow-blob-public-access false
          if [ $? -ne 0 ]; then
            echo "Failed to create the storage account"
            exit 1
          fi

      - name: Create the Storage Container
        run: |
          az storage container create \
              --name ${{ env.TERRAFORM_STORAGE_CONTAINER_NAME }} \
              --account-name ${{ env.TERRAFORM_STORAGE_ACCOUNT_NAME }}


